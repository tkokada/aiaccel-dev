# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-03 16:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/aiaccel.optimizer.rst:2
msgid "aiaccel.optimizer package"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:5
msgid "Submodules"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:8
msgid "aiaccel.optimizer.abstract\\_optimizer module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:16
msgid "aiaccel.optimizer.grid\\_search module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:24
msgid "aiaccel.optimizer.nelder\\_mead module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:32
msgid "aiaccel.optimizer.nelder\\_mead\\_search module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:40
msgid "aiaccel.optimizer.random\\_search module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:48
msgid "aiaccel.optimizer.sobol\\_search module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:56
msgid "aiaccel.optimizer.tpe\\_sampler module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:64
msgid "aiaccel.optimizer.tpe\\_search module"
msgstr ""

#: ../../source/aiaccel.optimizer.rst:72
msgid "Module contents"
msgstr ""

#~ msgid "Bases: :py:class:`~aiaccel.module.AbstractModule`"
#~ msgstr ""

#~ msgid "An abstract class for Optimizer classes."
#~ msgstr ""

#~ msgid "A total number to generate hyper parameters."
#~ msgstr ""

#~ msgid "type"
#~ msgstr ""

#~ msgid "int"
#~ msgstr ""

#~ msgid "A number to pool hyper parameters."
#~ msgstr ""

#~ msgid "Loaded hyper parameter configuration object."
#~ msgstr ""

#~ msgid "HyperParameterConfiguration"
#~ msgstr ""

#~ msgid "A number of generated hyper paramters."
#~ msgstr ""

#~ msgid "Create a hyper parameter file."
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "A hyper parameter dictionary."
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "An unique hyper parameter name."
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid "Create hyper parameter files."
#~ msgstr ""

#~ msgid "A list of hyper parameter dictionaries."
#~ msgstr ""

#~ msgid "None"
#~ msgstr ""

#~ msgid "Generate a initial parameter."
#~ msgstr ""

#~ msgid ""
#~ "Union[Dict[str, List[Dict[str, Union[str, "
#~ "Union[float,     List[float]]]]], None]: A "
#~ "created initial parameter. It returns     "
#~ "None if any parameters are already "
#~ "created."
#~ msgstr ""

#~ msgid "Union[Dict[str, List[Dict[str, Union[str, Union[float,"
#~ msgstr ""

#~ msgid ""
#~ "List[float]]]]], None]: A created initial "
#~ "parameter. It returns None if any "
#~ "parameters are already created."
#~ msgstr ""

#~ msgid "Generate parameters."
#~ msgstr ""

#~ msgid "A number of generating parameters."
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid "Causes when the inherited class does not     implement."
#~ msgstr ""

#~ msgid "A main loop process. This process is repeated every main loop."
#~ msgstr ""

#~ msgid "The process succeeds or not. The main loop exits if failed."
#~ msgstr ""

#~ msgid "Called after exiting a main loop process. This process is repeated"
#~ msgstr ""

#~ msgid "every main loop."
#~ msgstr ""

#~ msgid "Called before executing a main loop process. This process is"
#~ msgstr ""

#~ msgid "repeated every main loop."
#~ msgstr ""

#~ msgid "Called after exiting a main loop process."
#~ msgstr ""

#~ msgid "Called before entering a main loop process."
#~ msgstr ""

#~ msgid "Post-procedure after executed processes."
#~ msgstr ""

#~ msgid "Pre-procedure before executing processes."
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid "A class implementing Nelder-Mead method."
#~ msgstr ""

#~ msgid "A list of boundaries."
#~ msgstr ""

#~ msgid "np.ndarray"
#~ msgstr ""

#~ msgid "A dictionary of coefficients."
#~ msgstr ""

#~ msgid "Dict[str, float]"
#~ msgstr ""

#~ msgid "A list of evaluated parameter results."
#~ msgstr ""

#~ msgid "A logger object."
#~ msgstr ""

#~ msgid "logging.Logger"
#~ msgstr ""

#~ msgid "A list of hyper parameters."
#~ msgstr ""

#~ msgid "List[HyperParameter]"
#~ msgstr ""

#~ msgid "A dictionary to store temporal calculation results."
#~ msgstr ""

#~ msgid "Dict[str, Union[float, None]]"
#~ msgstr ""

#~ msgid "A list of current evaluated parameters."
#~ msgstr ""

#~ msgid "A current centroid value of y."
#~ msgstr ""

#~ msgid "float"
#~ msgstr ""

#~ msgid "A count of evaluation each loop."
#~ msgstr ""

#~ msgid "A list to store candidates to be executed."
#~ msgstr ""

#~ msgid "List[dict]"
#~ msgstr ""

#~ msgid "A number to be added to executing list."
#~ msgstr ""

#~ msgid "A temporal result of Expand."
#~ msgstr ""

#~ msgid "A temporal result of Inside Contraction."
#~ msgstr ""

#~ msgid "A temporal result of Outside Contraction."
#~ msgstr ""

#~ msgid "A temporal result of Reflection"
#~ msgstr ""

#~ msgid "A storage of execution history of each value and operator."
#~ msgstr ""

#~ msgid "Dict[str, List[Union[float, str]]]"
#~ msgstr ""

#~ msgid "Evaluate the result as maximize or minimize."
#~ msgstr ""

#~ msgid "bool"
#~ msgstr ""

#~ msgid "A number of max iterations. This is compared with _evaluated_itr."
#~ msgstr ""

#~ msgid "A number of Shrink."
#~ msgstr ""

#~ msgid "Is a current iteration out of boundaries or not."
#~ msgstr ""

#~ msgid "A list of results for _executing."
#~ msgstr ""

#~ msgid "List[float]"
#~ msgstr ""

#~ msgid "A current state."
#~ msgstr ""

#~ msgid "str"
#~ msgstr ""

#~ msgid ""
#~ "A number of iterations. Currently same"
#~ " with _evaluated_itr. It's different if "
#~ "counts out of boundaries."
#~ msgstr ""

#~ msgid "ToDo: Fix float comparison errors."
#~ msgstr ""

#~ msgid "Add a new result."
#~ msgstr ""

#~ msgid "A dictionary of a result parameter."
#~ msgstr ""

#~ msgid "Deserialize this module."
#~ msgstr ""

#~ msgid "A dictionary including serialized objects."
#~ msgstr ""

#~ msgid "Proceed a search step. One search method does not increment the"
#~ msgstr ""

#~ msgid "iteration. It increments when finalize method is called."
#~ msgstr ""

#~ msgid "The details of state transitions are as follows:"
#~ msgstr ""

#~ msgid "-->: state change indent: conditional branch"
#~ msgstr ""

#~ msgid ""
#~ "WaitInitialize: wait first three executing "
#~ "--> Initialize: add reflect executing "
#~ "--> WaitReflect: wait executing reflect "
#~ "one --> ReflectBranch: conditional jump "
#~ "using reflect"
#~ msgstr ""

#~ msgid "--> back to Initialize --> WaitExpand: wait executing expand one"
#~ msgstr ""

#~ msgid "--> ExpandBranch: calc using expand"
#~ msgstr ""

#~ msgid "---> back to Initialize"
#~ msgstr ""

#~ msgid "--> WaitOutsideContract: wait executing oc one"
#~ msgstr ""

#~ msgid "---> OutsideContractBranch: conditional jump using oc"
#~ msgstr ""

#~ msgid "--> back to Initialize --> WaitShrink: wait executing shrink f(y)"
#~ msgstr ""

#~ msgid "--> WaitInsideContract: wait executing ic one"
#~ msgstr ""

#~ msgid "---> InsideContractBranch: conditional jump using ic"
#~ msgstr ""

#~ msgid "Serialize this module."
#~ msgstr ""

#~ msgid "The serialized master objects."
#~ msgstr ""

#~ msgid ""
#~ "Bases: "
#~ ":py:class:`~aiaccel.optimizer.abstract_optimizer.AbstractOptimizer`"
#~ msgstr ""

#~ msgid "An optimizer class with nelder mead algorithm."
#~ msgstr ""

#~ msgid "Check the result files and update nelder mead object."
#~ msgstr ""

#~ msgid ""
#~ "Generate parameters. :param number: A "
#~ "number of generating parameters. :type "
#~ "number: Optional[int]"
#~ msgstr ""

#~ msgid "Causes when an invalid parameter type is set."
#~ msgstr ""

#~ msgid "Get the list of Nelder-Mead result."
#~ msgstr ""

#~ msgid "Results per trial."
#~ msgstr ""

#~ msgid "Get the list of ready parameters."
#~ msgstr ""

#~ msgid "list"
#~ msgstr ""

#~ msgid "Nelder Mead's main module."
#~ msgstr ""

#~ msgid "Result of optimization."
#~ msgstr ""

#~ msgid "Set the goal to Maximize."
#~ msgstr ""

#~ msgid "Set the goal to Minimize."
#~ msgstr ""

#~ msgid "Update hyperparameter's names."
#~ msgstr ""

#~ msgid "old parameter name"
#~ msgstr ""

#~ msgid "New parameter name"
#~ msgstr ""

#~ msgid "befor"
#~ msgstr ""

#~ msgid "{"
#~ msgstr ""

#~ msgid "'name': 'CMTrNe5P8a', 'parameters': ["
#~ msgstr ""

#~ msgid ""
#~ "{'parameter_name': 'x1', 'value': 3.37640289751353},"
#~ " {'parameter_name': 'x2', 'value': "
#~ "1.6556037243290205}"
#~ msgstr ""

#~ msgid ""
#~ "], 'state': 'WaitExpand', 'itr': 5, "
#~ "'index': None, 'out_of_boundary': False"
#~ msgstr ""

#~ msgid "after"
#~ msgstr ""

#~ msgid "'name': '000014', 'parameters': ["
#~ msgstr ""

#~ msgid "Bases: :py:class:`~optuna.samplers._tpe.sampler.TPESampler`"
#~ msgstr ""

#~ msgid "Get a number of startup trials in TPESampler."
#~ msgstr ""

#~ msgid "A number of startup trials."
#~ msgstr ""

#~ msgid "Check the result files and add it to sampler object."
#~ msgstr ""

#~ msgid "Create the optuna.study object and store it."
#~ msgstr ""

#~ msgid "Is a current trial startup trial or not."
#~ msgstr ""

#~ msgid "Pre-Procedure before executing optimize processes."
#~ msgstr ""

#~ msgid "Returns the path object to store the pickled optuna.study object."
#~ msgstr ""

#~ msgid "the path object to store the pickled optuna.study object."
#~ msgstr ""

#~ msgid "Create an optuna.distributions dictionary for the parameters."
#~ msgstr ""

#~ msgid "A parameter configuration object."
#~ msgstr ""

#~ msgid "An optuna.distributions object."
#~ msgstr ""

