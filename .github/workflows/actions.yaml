name: Tests
on: [push, pull_request]

jobs:
  pytest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up python3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Create cache venv
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt

      - name: Install dependencies
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install
        run: |
          python -m pip install --upgrade pip
          python3.8 -m venv .venv && . ./.venv/bin/activate &&
          pip install -r requirements.txt && python setup.py install
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Unit test
        run: . ./.venv/bin/activate && pytest -v --cov=aiaccel --cov-branch --cov-report=term-missing tests/unit/test_buffer.py --junit-xml results/pytest.xml
        continue-on-error: true

      - name: Pycodestyle
        run: . ./.venv/bin/activate && pytest -v --pycodestyle aiaccel examples
        continue-on-error: true

      - name: Flack8
        run: . ./.venv/bin/activate && pytest -v --flake8 aiaccel examples
        continue-on-error: true

      - name: Random optimizer test
        run: pytest -s -v tests/integration/sphere/test_sphere_random.py
        continue-on-error: true

      - name: Grid optimizer test
        run: pytest -s -v tests/integration/sphere/test_sphere_grid.py
        continue-on-error: true

      - name: Sobol optimizer test
        run: pytest -s -v tests/integration/sphere/test_sphere_sobol.py
        continue-on-error: true

      - name: TPE optimizer test
        run: pytest -s -v tests/integration/sphere/test_sphere_tpe.py
        continue-on-error: true

      - name: Nelder-mead optimizer test
        run: pytest -s -v tests/integration/sphere/test_sphere_nelder_mead.py
        continue-on-error: true

      - name: Upload unit test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: Unit test results (Python 3.8)
          path: results/*.xml

      - name: Download artifacts
        if: success() || failure()
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
